---
export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #F6F6F6;
		font-weight: 200;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 80ch;
	}

	h1 {
		font-size: 3rem;
		font-weight: 100;
		margin: 0;
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}

	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}

	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.5em 0.5em;
	}
	
	.instructions strong {
		color: rgb(var(--accent));
	}

	.link-card-grid {
		list-style-type: none;
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(48ch, 1fr));
		gap: 1rem;
		padding: 0;
	}

	.message-card {
		display: flex;
		padding: 0.15rem;
		margin-top: 0.5rem;
		background-color: white;
		background-image: var(--accent-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
	}

	/* .link-card {
		display: none!important;
	}

	.link-card.show {
		display: flex!important;
	} */

	button {
		cursor: pointer;
		border-radius: 4px;
		border: 1px solid rgb(var(--accent));
		font-size: 1em;
		padding: 0.5em 1.8em;
	}

	.button-primary {
		background-image: var(--accent-gradient);
		background-size: 400%;
		color: white;
	}

	.button-secondary {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
		margin-right: 0.5em;
	}

	.button-primary:is(:hover, :focus-within) {
		background-position: 0%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 8px 16px -1px rgba(0, 0, 0, 0.1), 0 8px 15px -2px rgba(0, 0, 0, 0.1);
	}

	.button-secondary:is(:hover, :focus-within) {
		background-position: 0%;
		color: rgb(var(--accent));
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 8px 16px -1px rgba(0, 0, 0, 0.1), 0 8px 15px -2px rgba(0, 0, 0, 0.1);
	}

</style>
